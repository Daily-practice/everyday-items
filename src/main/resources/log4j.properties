#定义输出级别和输出平台,控件台输出
#log4j.rootLogger=debug, stdout
#设定stdout输出平台 org.apache.log4j.ConsoleAppender（控制台）
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#指定输出的最低级别
#log4j.appender.stdout.Threshold=debug
# 指定默认值是true,意谓着所有的消息都会被立即输出。 fasle 不输出
#log4j.appender.stdout.ImmediateFlush=true
#默认情况下是System.out,指定输出控制台-err为红色的提示
#log4j.appender.stdout.Target=system.err
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#指定输入的格式对输出的内容进行格式化
#%p  输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%d 输出日志时间点的日期或时间，
#%l 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数
#%m 输出代码中指定的消息,产生的日志具体信息
#%n 输出一个回车换行符，Windows平台为”\r\n”，Unix平台为”\n”输出日志信息换行
#log4j.appender.stdout.layout.ConversionPattern=[%-5p][%d{yyyy-MM-dd HH:mm:ss}][%l]%m%n
#fileencoding=utf-8


### 日志级别 ###
log4j.rootLogger = debug , C , F , E

### 控制台 console ###
log4j.appender.C = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=system.err
log4j.appender.C.Target = System.out
log4j.appender.C.layout = org.apache.log4j.PatternLayout
log4j.appender.C.layout.ConversionPattern = [%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n

### 文件 file ###
log4j.appender.F = org.apache.log4j.DailyRollingFileAppender
log4j.appender.F.File =/home/left/logs/mall/mall_info_log_
log4j.appender.F.File.DatePattern=yyyy-MM-dd'.log' 
log4j.appender.F.Append = true
log4j.appender.F.Threshold = INFO 
log4j.appender.F.layout = org.apache.log4j.PatternLayout
log4j.appender.F.layout.ConversionPattern = [%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n

### 异常 exception ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =/home/left/logs/mall/mall_error_log_
log4j.appender.E.File.DatePattern=yyyy-MM-dd'.log' 
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = [%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n
### JDBC ###
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.org.mybatis=DEBUG
### SQL ###
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG

# 输出special日志
log4j.logger.special = INFO, special
# 是否在父log中输出日志
log4j.additivity.special = true
# 每天生产日志文件
log4j.appender.special = org.apache.log4j.DailyRollingFileAppender
# 生成日志到单独的文件
log4j.appender.special.File =/home/left/logs/mall/special/special_
log4j.appender.special.File.DatePattern=yyyy-MM-dd'.log'


# 追加日志
log4j.appender.special.Append = true
# 日志级别
#log4j.appender.stdout.Threshold=debug
log4j.appender.special.Threshold = debug
log4j.appender.special.layout = org.apache.log4j.PatternLayout
# 日志格式
log4j.appender.special.layout.ConversionPattern = [%p] [%-d{yyyy-MM-dd HH:mm:ss}] %C.%M(%L) | %m%n